{"version":3,"sources":["issuers.js","pretest.js","luhn.js","index.js"],"names":["issuers","id","prefix","numLength","pretest","number","output","isNumber","digitsTest","isLength","lengthTest","issuerName","issuerTest","Error","e","message","str","arrNumber","Array","from","digits","forEach","element","isNaN","regex","match","pretested","join","strLength","length","arr","issuer","firstDigit","secondDigit","prefixShort","prefixLong","el","includes","luhn","lastDigit","slice","console","log","verified","luhnAlg","numToVerify","split","splice","reversed","reverse","sum","i","digit","checkSum","inputNum","document","getElementById","outputMsg","btn","getElementsByClassName","oninput","handleInput","value","textContent","style","display","addEventListener","innerText"],"mappings":";;AGIA;;AACA;;AHLO,IAAMA,OAAO,GAAG,CACrB;AACEC,AEFJ,ADAA,EDEIA,EAAE,EAAE,YADN;AGDF,AHGIC,EAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAFV;AGAF,AHGIC,EAAAA,SAAS,EAAE,CAAC,EAAD;AGFf,AHDE,CADqB,EAMrB;AGCF,AHAIF,AELW,EFKXA,EGAEqD,AHAA,EAAE,GELgBhB,GCKV,AHDZ,CEJa,CAActB,CCKZuC,EDLF,EAAmB,ICKT,CAACC,cAAT,CAAwB,UAAxB,CAAjB;AACA,AHAItD,AELF,EFKEA,EGAEuD,EDLElB,EFKE,EAAE,CAAC,EGAE,CHAH,CAFV,AEHe,CCKCgB,EDLEvC,GAAG,CAACwB,ECKE,CAACgB,EDLP,CAAU,CAAC,CAAX,CAAlB,QCKgB,CAAwB,YAAxB,CAAlB;AACA,AHAIrD,AELFsC,EFKEtC,AELFsC,ECKIiB,GAAG,EDLA,CCKGH,ADLFb,CFKG,EAAE,AELb,CFKc,EAAD,EGAK,AHAA,CGACiB,CHAN,IELE3C,GAAf,cCKU,CAAgC,WAAhC,EAA6C,CAA7C,CAAZ,EAEA;AHLE,AEDA,CFLqB,EAWrB,GENIV,MAAM,GAAG,EAAb;ACQFgD,AHDIrD,EAAAA,EAAE,EAAE,EGCA,CAAC2D,OAAT,GAAmBC,KHFjB,MGEF;AHAI3D,AEPF,EFOEA,IEPE,EFOI,EAAE,CAAC,IAAD,EAAO,IAAP,CAFV;AGIF,AHDIC,AEPA,EFOAA,MEPMwC,CCQDkB,EHDI,EAAE,CAAC,EAAD,AEPG,GAAGjB,CCQrB,GAAuB,GDRK,CAAC5B,GAAD,CAAxB;ACSF,AHLA,AEHEyB,CFRmB,CAAhB,EEQHA,ECQI1B,KDRG,CAAC2B,CCQG,EDRX,CCQc,CAAC,CAAC,QDRDC,QAAf,MCQwBW,QAAQ,CAACQ,KAAjB,CAAlB;AACArB,EAAAA,OAAO,CAACC,GAAR,CAAY3B,OAAZ;AACA0C,ADTE,ECSFA,MDTMd,GCSG,CAACoB,IDTI,KAAK,CAACxB,CCSpB,GAAwB,KDTtB,EAA6B,eCSCe,QAAQ,CAACQ,KAAjB,CAAxB;ADRI,ADRS,SAAS1D,GCQZ,IAAIS,ADRD,CAAiBR,ICQpB,EDRG,EAAyB,mCCQlC;ACSJ,ADRG,ADRH,KCME,CCUEU,AFhBAT,KCQK,CDRC,CEgBV,EAAa,AFhBA,EAAb;AEiBEoD,ADRE,ICQFA,GAAG,CAACM,KAAJ,ADRU1D,CCQA2D,KDRM,ECQhB,GAAoB,cAApB,iBDRE;ACSH,ADRE,ADRH,MAAI;AEiBL,ADRE,ADRC,GCAF,CAQE,IDRM1D,GCQCO,CAAP,EAAU,EDRI,GAAGN,UAAU,CAACH,MAAD,CAA3B,CADE,CACmC;ACSrC,WAAOS,CAAP;ACQJ2B,ADPG,ADTC,OEgBG,CAACC,AFhBEjC,GEgBV,CAAY6C,IFhBM,GAAG5C,CEgBD,CAACoD,KAArB,GAA6B,AFhBE,CAACvD,QAAD,CAA3B,CAFE,CAEqC;;AEiB3CmD,ADPE,ADTE,GEgBD,CAACQ,IFhBMvD,CCSDL,MAAP,GDTkB,EEgBpB,CAAqB,AFhBEM,OEgBvB,EAA8B,CFhBG,CAACH,QAAD,CAA7B,CEgBgC,AFnB9B,CAGuC;AEiB3C,ADPD;ACQC8C,AFhBE,EEgBFA,MFhBM5C,EEgBE,CAAC6C,OFhBO,KAAK,EEgBrB,AFhBE,CEgBsB,CFhBC,QEgBzB,EAAmCW,SAAnC,GAA+C,mBAAKb,QAAQ,CAACQ,KAAd,CAA/C;AACD,ADPD,ADTM,CEaN,GAKA,KDTSlB,GDTG,ICSZ,ADTgB/B,CCSCG,GAAjB,CDTY,CCSU,ADTA,sCAAV,CAAN;AEmBN,ADTE,ADTG,KAFD,CCWI6B,KDTG,MCSQ,GAAG7B,GAAG,CAAC8B,KAAJ,CAAU,EAAV,CAApB;ACUF,ADTED,ADTIvC,ECSJuC,IDTIvC,MAAM,CCSC,CAACyC,CDTCxC,KCSb,CAAmB,CAAC,CAApB,ADTI;AEmBN,ADTE,ADTG,MCSGyC,QAAQ,GAAGH,WAAW,CAACI,OAAZ,EAAjB;ACUF,ADTER,ADTC,ECSDA,CDnBA,CAUE,KCSK,CAACC,CDTC5B,CAAP,CCSF,CAAYkC,ADTA,QCSZ;AAEA,ADVE1C,IAAAA,ECUES,IDVI,GCUG,GAAG,EAAd,KDVcD,CAAC,CAACC,OAAR,CAAN,CADU,CAC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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["export const issuers = [\r\n  {\r\n    id: \"MasterCard\",\r\n    prefix: [\"51\", \"52\", \"53\", \"54\", \"55\"],\r\n    numLength: [16],\r\n  },\r\n  {\r\n    id: \"Visa\",\r\n    prefix: [\"4\"],\r\n    numLength: [13, 16],\r\n  },\r\n  {\r\n    id: \"American Express\",\r\n    prefix: [\"34\", \"37\"],\r\n    numLength: [15],\r\n  },\r\n];\r\n","import { issuers } from \"./issuers.js\";\r\n\r\nexport default function pretest(number) {\r\n  let output = \"\";\r\n\r\n  try {\r\n    const isNumber = digitsTest(number); //string in, string out\r\n    const isLength = lengthTest(isNumber); //string in, string out\r\n    const issuerName = issuerTest(isLength); //string/arr in, string out\r\n\r\n    if (issuerName === \"\") {\r\n      throw new Error(\"Sorry, the card provider is unknown.\");\r\n    } else {\r\n      output = isNumber;\r\n    }\r\n  } catch (e) {\r\n    output = `${e.message}`; // ${e.stack}`;\r\n  }\r\n  return output;\r\n}\r\n\r\n//instant digits test\r\n\r\nfunction digitsTest(str) {\r\n  const arrNumber = Array.from(str);\r\n  let digits = \"\";\r\n\r\n  arrNumber.forEach((element) => {\r\n    if (isNaN(element)) {\r\n      throw new Error(`Whoops! '${element}' is not a number!`);\r\n    } else {\r\n      return (digits += element);\r\n    }\r\n  });\r\n  return digits;\r\n}\r\n\r\n//instant length test\r\n\r\nfunction lengthTest(str) {\r\n  const regex = /\\S*\\d+/g;\r\n  if (str.match(regex)) {\r\n    const pretested = str.match(regex).join(\"\");\r\n    const strLength = pretested.length;\r\n\r\n    if (strLength < 13) {\r\n      throw new Error(`Whoops! The number entered: ${pretested} is too short!`);\r\n    }\r\n    if (strLength == 14) {\r\n      throw new Error(`Whoops! The number entered: ${pretested} is invalid!`);\r\n    }\r\n    if (strLength > 16) {\r\n      throw new Error(`Whoops! The number entered: ${pretested} is too long!`);\r\n    }\r\n  } else {\r\n    return str;\r\n  }\r\n  return str;\r\n}\r\n\r\n//specifying issuer, function compares/testing entry data with data stored in module issuers.js\r\n\r\nfunction issuerTest(arr) {\r\n  let issuer = \"\";\r\n  const numLength = arr.length;\r\n  const [firstDigit, secondDigit] = arr;\r\n  const prefixShort = firstDigit;\r\n  const prefixLong = `${firstDigit}${secondDigit}`;\r\n\r\n  issuers.forEach((el) => {\r\n    if (el.prefix.includes(prefixShort) && el.numLength.includes(numLength)) {\r\n      return (issuer = el.id);\r\n    }\r\n    if (el.prefix.includes(prefixLong) && el.numLength.includes(numLength)) {\r\n      return (issuer = el.id);\r\n    }\r\n  });\r\n  return issuer;\r\n}\r\n","import pretest from \"./pretest.js\";\r\n\r\nexport default function luhn(str) {\r\n  const lastDigit = str.slice(-1);\r\n  console.log(`${str} entry`);\r\n  let output = \"\";\r\n  try {\r\n    const verified = luhnAlg(str);\r\n    console.log(`${verified} after luhn`);\r\n    if (verified !== +lastDigit) {\r\n      throw new Error(`The Credit Card number is NOT valid`);\r\n    } else {\r\n      return (output = `The Credit Card number is valid`);\r\n    }\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction luhnAlg(str) {\r\n  const numToVerify = str.split(\"\");\r\n  numToVerify.splice(-1);\r\n  const reversed = numToVerify.reverse();\r\n  console.log(reversed);\r\n\r\n  let message = \"\";\r\n  let sum = 0;\r\n\r\n  for (let i = 0; i <= reversed.length; i++) {\r\n    let digit = +reversed[i];\r\n    console.log(`${i} index ${reversed[i]}`);\r\n    if (i % 2 == 0) {\r\n      digit *= 2;\r\n      console.log(digit);\r\n      if (digit > 9) {\r\n        console.log(`${digit} > 9`);\r\n        digit -= 9;\r\n      }\r\n    }\r\n    sum += digit;\r\n    console.log(`${i}:index - cyfra: ${digit} >> suma ${sum}`);\r\n  }\r\n\r\n  const checkSum = sum % 10;\r\n  console.log(`${sum} suma`);\r\n  console.log(`${checkSum} kontr`);\r\n  return checkSum;\r\n}\r\n","//import \"./styles/main.scss\";\r\n//const jsdom = require(\"jsdom\");\r\n//const { JSDOM } = jsdom;\r\n\r\nimport pretest from \"./pretest.js\";\r\nimport luhn from \"./luhn.js\";\r\n\r\nconst inputNum = document.getElementById(\"ccnumber\");\r\nconst outputMsg = document.getElementById(\"result-msg\");\r\nconst btn = document.getElementsByClassName(\"check-btn\")[0];\r\n\r\n//let hidden = false;\r\n\r\ninputNum.oninput = handleInput;\r\n\r\nfunction handleInput() {\r\n  const message = !!pretest(inputNum.value);\r\n  console.log(message);\r\n  outputMsg.textContent = pretest(inputNum.value);\r\n  if (message) {\r\n    btn.style.display = \"inline-block\";\r\n  }\r\n}\r\nconsole.log(inputNum.value); //?\r\nbtn.addEventListener(\"click\", () => {\r\n  //outputMsg.textContent = luhn(inputNum.value);\r\n  document.getElementById(\"checked\").innerText = luhn(inputNum.value);\r\n});\r\n\r\n// function displayVerified(passed) {\r\n//   if (passed === true) {\r\n//     const validNum = luhn(number);\r\n//   }\r\n// }\r\n"]}